<!doctype html>
<html lang="en">

<head>
    <!-- head -->
    <% include include/head %>
</head>


<body class="home">

    <!-- navbar header -->
    <% include include/nav %>

    <div id="login-overlay" class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <a href="/order" class="close">
                    <span class="fa fa-times text-primary" aria-hidden="true"></span>
                    <span class="sr-only">Close</span>
                </a>
                <h4 class="modal-title"><span class="fa fa-cutlery"></span> Complete Your Order</h4>
            </div>
            <div class="modal-body">

                <div class="container-fluid margin-btm-4">
                    <div class="col-xs-12">

                        <form class="form form-horizontal" action="/checkout" id="payment" method="post">

                            <input type="hidden" name="stripeToken" id="stripeToken" />

                            <ul>
                                <li><a href="#orderTypeContainer" data-toggle="tab">Order Type</a></li>
                                <li><a href="#paymentInfoContainer" data-toggle="tab">Payment Type</a></li>
                                <li><a href="#confirmContainer" data-toggle="tab">Confirmation</a></li>
                            </ul>

                            <div class="margin-top-1 progress active" style="height: 8px;">
                                <div id="progress" class="progress-bar progress-bar-success" style="width: 25%"></div>
                            </div>
                            <div id="alertContainer" class="hidden">
                                <div class="alert alert-danger">

                                </div>
                            </div>

                            <div class="tab-content margin-top-3">

                                <!-- Order type carryout/delivery -->
                                <% include include/checkout/order-type %>

                                <!-- Payment type cash/card -->
                                <% include include/checkout/payment-type %>

                                <!-- Order confirmation -->
                                <% include include/checkout/confirmation %>

                            </div>

                        </form>
                    </div>

                </div>

            </div>
        </div>
    </div>



    <!-- javascript -->
    <% include include/scripts %>
    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    <script type="text/javascript" src="/js/jquery.bootstrap.wizard.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            Stripe.setPublishableKey('pk_test_8OGcKXmWBHhghgYhpjOqEYzF');

            var wizard = $('#payment');

            var $paymentForm = $('#payment');
            console.log($paymentForm);

            var $orderTypeCarryout = $('#orderTypeCarryout')
                , $orderTypeDelivery = $('#orderTypeDelivery')
                , $paymentTypeCash = $('#paymentTypeCash')
                , $paymentTypeCard = $('#paymentTypeCard');

            var $streetAddress1 = $('#streetAddress1')
                , $streetAddress2 = $('#streetAddress2')
                , $city = $('#city')
                , $state = $('#state')
                , $postalCode = $('#postalCode');

            var $name = $('#name')
                , $number = $('#number')
                , $expMonth = $('#exp-month')
                , $expYear = $('#exp-year')
                , $cvc = $('#cvc')
                , $zip = $('#address_zip');

            var displayValidationErrors = function (msgArray) {
                if (msgArray.length == 0) {
                    $('#alertContainer').addClass('hidden');
                    return;
                }
                var errorMessages = msgArray.join('<br />');
                $('#alertContainer > .alert').html(errorMessages);
                $('#alertContainer').removeClass('hidden');
            };

            var stripeResponseHandler = function (status, response) {
                console.log('status', status);
                console.log('response', response);
                if (response.error) {
                    var messageArray = [ response.error.message ];
                    displayValidationErrors(messageArray);
                    $('#submit').prop('disabled', true);
                    wizard.bootstrapWizard('show', 1);
                } else {
                    $('#stripeToken').val(response.id);
                    $('#submit').prop('disabled', false);
                    var data = $paymentForm.serializeArray();
                    console.log(data);
                }
            };

            var submitHandler = function (e) {
                console.log('initial submit');
                var $form = $(this);
                //$('#submit').prop('disabled', true);
                Stripe.card.createToken($form, stripeResponseHandler);
                console.log('return from submitHdlr')
                return false;
            };

            var validator = function (index) {

                    console.log('validator page: ', index);

                    var indexValidators = [
                            function () {
                                return true;

                            },
                            function () {
                                var valid = true
                                    , messageArray = [];
                                if ($orderTypeCarryout.prop('checked')) {
                                    return true;
                                }

                                if (!$streetAddress1.val()) {
                                    valid = false;
                                    $streetAddress1.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid street address.');
                                } else {
                                    $streetAddress1.parents('.form-group').removeClass('has-error');
                                }

                                if (!$city.val()) {
                                    valid = false;
                                    $city.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid city.');
                                } else {
                                    $city.parents('.form-group').removeClass('has-error');
                                }
                                displayValidationErrors(messageArray);
                                return valid;
                            },
                            function () {
                                var valid = true
                                    , messageArray = [];

                                if ($paymentTypeCash.prop('checked')) {
                                    return true;
                                }

                                if (!$name.val()) {
                                    valid = false;
                                    $name.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid name.');
                                } else {
                                    $name.parents('.form-group').removeClass('has-error');
                                }

                                if (!$number.val()) {
                                    valid = false;
                                    $number.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid card number.');
                                } else {
                                    $number.parents('.form-group').removeClass('has-error');
                                }

                                if (!$expMonth.val()) {
                                    valid = false;
                                    $expMonth.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid month.');
                                } else {
                                    $expMonth.parents('.form-group').removeClass('has-error');
                                }

                                if (!$expYear.val()) {
                                    valid = false;
                                    $expYear.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid year.');
                                } else {
                                    $expYear.parents('.form-group').removeClass('has-error');
                                }

                                if (!$cvc.val()) {
                                    valid = false;
                                    $cvc.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid cvc.');
                                } else {
                                    $cvc.parents('.form-group').removeClass('has-error');
                                }

                                if (!$zip.val()) {
                                    valid = false;
                                    $zip.parents('.form-group').addClass('has-error');
                                    messageArray.push('Please enter a valid zip code.');
                                } else {
                                    $zip.parents('.form-group').removeClass('has-error');
                                }

                                if (valid) {
                                    Stripe.card.createToken($paymentForm, stripeResponseHandler);
                                } else {
                                    displayValidationErrors(messageArray);
                                }
                                return valid;
                            }
                        ],

                        validatorFunction = (index >= 0 && index < indexValidators.length) ?
                            indexValidators[index] : false;

                    return validatorFunction();
                },

                enableDeliveryFieldset = function () {
                    $('#deliveryInfoFieldset')
                        .removeClass('disabled');
                    $('#deliveryInfoFieldset input:disabled')
                        .prop('disabled', false);
                },

                disableDeliveryFieldset = function () {
                    $('#deliveryInfoFieldset')
                        .addClass('disabled')
                        .children('.form-group')
                        .removeClass('has-error');
                    $('#deliveryInfoFieldset input')
                        .prop('disabled', true);
                    displayValidationErrors([]);
                },

                enableCardFieldset = function () {
                    $('#cardInfoFieldset')
                        .removeClass('disabled');
                    $('#cardInfoFieldset input:disabled')
                        .prop('disabled', false);
                },

                disableCardFieldset = function () {
                    $('#cardInfoFieldset')
                        .addClass('disabled')
                        .children('.form-group')
                        .removeClass('has-error');
                    $('#cardInfoFieldset input')
                        .prop('disabled', true);
                    displayValidationErrors([]);
                },

                CARRYOUT_ORDER = "checkout.carryout",
                DELIVERY_ORDER = "checkout.delivery",
                CARD_PAYMENT = "checkout.payment.card",
                CASH_PAYMENT = "checkout.payment.cash",
                CONFIRM = "checkout.confirm",

                initialize = function () {

                };

            initialize();

            $(document)
                .on(CARRYOUT_ORDER, function (e) {
                    if (!$("#deliveryInfoFieldset").hasClass('disabled')) {
                        disableDeliveryFieldset();
                    }
                })
                .on(DELIVERY_ORDER, function (e) {
                    if ($("#deliveryInfoFieldset").hasClass('disabled')) {
                        enableDeliveryFieldset();
                    }
                })
                .on(CARD_PAYMENT, function (e) {
                    if ($("#cardInfoFieldset").hasClass('disabled')) {
                        enableCardFieldset();
                    }
                })
                .on(CASH_PAYMENT, function (e) {
                    if (!$("#cardInfoFieldset").hasClass('disabled')) {
                        disableCardFieldset();
                    }
                })
                .on(CONFIRM, function (e) {

                });

            wizard.bootstrapWizard({
                'tabClass': 'nav nav-pills',
                'nextSelector': '.btn-next',
                'previousSelector': '.btn-prev',
                'onNext': function (tab, nav, index) {
                    console.log('onNext: ', index, $('form').serializeArray());
                    return validator(index);
                },
                'onPrevious': function (tab, nav, index) {
                    console.log('onPrevious: ', index, $('form').serializeArray());
                },
                'onTabShow': function (tab, nav, index) {
                    var width = (index + 1) * 33.33;
                    $('#progress').css({'width': width + '%' });
                }
            });

            $orderTypeCarryout
                .parent('label')
                .on('click', function (e) {
                    $(document).trigger(CARRYOUT_ORDER);
                });

            $orderTypeDelivery
                .parent('label')
                .on('click', function (e) {
                    $(document).trigger(DELIVERY_ORDER);
                });

            $paymentTypeCash
                .parent('label')
                .on('click', function (e) {
                    console.log('click cash');
                    $(document).trigger(CASH_PAYMENT);
                });

            $paymentTypeCard
                .parent('label')
                .on('click', function (e) {
                    console.log('click card');
                    $(document).trigger(CARD_PAYMENT);
                });

        });

    </script>
</body>
</html>
